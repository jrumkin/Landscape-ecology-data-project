---
title: "Group_Assignment_Code"
format: html
---


## Set Up
```{r}

library(tidyverse)
library(here) # file organization
library(janitor)
library(readxl) # reading excel files
library(ggeffects) # getting model predictions
library(MuMIn) # model selection
library(vegan)  #for diversity index
library(hillR) #for calculating hill numbers #not used?


# read in your data
orig_data <- read_xlsx(
  #file path
  here("Project Data", "Updated_Data_Entry_2025_26.xlsx"),
  #specify the sheet I want to read in
  sheet = "Data entry") |> 
  clean_names() |>  #clean column names
  select(-c(367:845)) |> #remove empty columns 
  mutate(across(15:366, ~ as.numeric(as.character(.)))) |>  #force numeric in all species columns, non-numeric become NA
  mutate(across(15:366, ~ replace_na(., 0))) #replace NA with 0






```


## Data Proccesing
```{r}

rural_bird_data <- orig_data |> 
  filter(rural_urban == "Rural") |> #select only the rows "Rural" 
  select(15:109) |> #select only the bird species columns
  select(where(~ sum(.) > 0)) |>  #keeps only columns(species) that have at least one observation in the filtered sample set
  mutate(total = rowSums(across(everything()))) |>  #create row wise totals across selected species 
   rowwise() |> #following functions will be done by the row (bc column is default)
  mutate( #add new columns
    q0 = sum(c_across(-total) > 0), #Hill q0 column
    q1 = exp(-sum((c_across(-total) / total) * log(c_across(-total) / total), na.rm = TRUE)),
    q2 = 1 / sum((c_across(-total) / total)^2, na.rm = TRUE)
  ) |> 
  ungroup() 



urban_bird_data <- orig_data |> 
  filter(rural_urban == "Urban") |> 
  select(15:109) |> 
  select(where(~ sum(.) > 0)) |> 
  mutate(total = rowSums(across(everything()))) |> 
  rowwise() |> #following functions will be done by the row (bc column is default)
  mutate( #add new columns
    q0 = sum(c_across(-total) > 0), #Hill q0 column
    q1 = exp(-sum((c_across(-total) / total) * log(c_across(-total) / total), na.rm = TRUE)),
    q2 = 1 / sum((c_across(-total) / total)^2, na.rm = TRUE)
  ) |> 
  ungroup()



rural_plant_data <- orig_data |> 
  filter(rural_urban == "Rural") |> #select only the rows "Rural" 
  select(110:366) |> #select only the plant species columns
  select(where(~ sum(.) > 0)) |>  #keeps only columns(species) that have at least one observation in the filtered sample set
  mutate(total = rowSums(across(everything()))) |> 
  rowwise() |> #following functions will be done by the row (bc column is default)
  mutate( #add new columns
    q0 = sum(c_across(-total) > 0), #Hill q0 column
    q1 = exp(-sum((c_across(-total) / total) * log(c_across(-total) / total), na.rm = TRUE)),
    q2 = 1 / sum((c_across(-total) / total)^2, na.rm = TRUE)
  ) |> 
  ungroup()



urban_plant_data <- orig_data |> 
  filter(rural_urban == "Urban") |> 
  select(110:366) |> 
  select(where(~ sum(.) > 0)) |> 
  mutate(total = rowSums(across(everything()))) |> 
  rowwise() |> #following functions will be done by the row (bc column is default)
  mutate( #add new columns
    q0 = sum(c_across(-total) > 0), #Hill q0 column
    q1 = exp(-sum((c_across(-total) / total) * log(c_across(-total) / total), na.rm = TRUE)),
    q2 = 1 / sum((c_across(-total) / total)^2, na.rm = TRUE)
  ) |> 
  ungroup()
  

```

## Exploratory Visualizations

```{r}

ggplot(data = rural_bird_data,
       aes(x = ))

#we need to clean the latitude column but clean it first so we can group surveys by location? or something to join the data frames by?


```









