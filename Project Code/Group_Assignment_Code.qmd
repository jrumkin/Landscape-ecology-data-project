---
title: "Group_Assignment_Code"
format: html
---


## Set Up
```{r}

library(tidyverse)
library(here) # file organization
library(janitor)
library(readxl) # reading excel files


# read in your data
orig_data <- read_xlsx(
  #file path
  here("Project Data", "Updated_Data_Entry_2025_26.xlsx"),
  #specify the sheet I want to read in
  sheet = "Data entry") |> 
  clean_names() |>  #clean column names
  select(-c(366:844)) |> #remove empty columns
  mutate(across(14:365, ~ as.numeric(as.character(.)))) |>  #force numeric in all species columns, non-numeric become NA
  mutate(across(14:365, ~ replace_na(., 0))) |>  #replace NA with 0
  mutate(
    Type = case_when(
      grepl("Bird", type_of_survey, ignore.case = TRUE) ~ "Bird",
      grepl("Transect", type_of_survey, ignore.case = TRUE) ~ "Plant",
      TRUE ~ "Other" ))



```





## Data Proccesing
```{r}

rural_bird_data <- orig_data |> #make new data frame, just rural bird data
  filter(rural_urban == "Rural",
         Type == "Bird") |> 
  select(1, blauwe_reiger:madeliefje) |> #select observer ID and bird columns
  select(where(~ sum(.) > 0)) |> #remove column that have zero observations
  mutate(total_abundance = rowSums(across(-1))) |>  #calculate total abundance per survey
  aggregate(. ~ observer_id, sum, na.rm = TRUE) #sum the bird counts and total abundance for each location using observer ID, ie combining bird surveys 0 m + 50 m + 100 m
  
  
urban_bird_data <- orig_data |> #create new data frame, just urban bird surveys
  filter(rural_urban == "Urban",
         Type == "Bird") |> 
  select(1, blauwe_reiger:madeliefje) |> 
  select(where(~ sum(.) > 0)) |> 
  mutate(total_abundance = rowSums(across(-1))) |>  
  aggregate(. ~ observer_id, sum, na.rm = TRUE)
  
 
rural_plant_data <- orig_data |> #new data frame, rural plant data only
  filter(rural_urban == "Rural",
         Type == "Plant") |> 
  select(1, paardenbloem:schijnaardbei) |> #selecting observer ID and plant columns only
  select(where(~ sum(.) > 0)) |> 
  mutate(total_abundance = rowSums(across(-1))) 
    
   
urban_plant_data <- orig_data |> #new data frame, urban plant data only
  filter(rural_urban == "Urban",
         Type == "Plant") |> 
  select(1, paardenbloem:schijnaardbei) |> #selecting observer ID and plant columns only #is this wrong?
  select(where(~ sum(.) > 0)) |> 
  mutate(total_abundance = rowSums(across(-1))) 

  

```


## Calculate Abundance and Hill Numbers 
```{r}

rural_bird_hill <- rural_bird_data |> #new data frame
  pivot_longer(cols = blauwe_reiger:madeliefje, #change data to long format
               names_to = "Species",
               values_to = "Abundance") |> 
  group_by(observer_id) |> 
  mutate(total_abundance = sum(Abundance, na.rm = TRUE)) |>
  mutate(Relative_abundance= Abundance/ total_abundance) |> 
  filter(Relative_abundance != 0) |> 
  summarise(q0 = sum(Relative_abundance^0)^(1/(1-0)),
            q1 = exp(-sum(Relative_abundance * log(Relative_abundance))),
            q2 = sum(Relative_abundance^2)^(1/(1-2)), 
            bird_total_abundance = unique(total_abundance))
  



urban_bird_hill <- urban_bird_data |> #new data frame
  pivot_longer(cols = blauwe_reiger:madeliefje, #change data to long format, selecting bird columns
               names_to = "Species",
               values_to = "Abundance") |> 
  group_by(observer_id) |> 
  mutate(total_abundance = sum(Abundance, na.rm = TRUE)) |> #calculating total_abundance
  mutate(Relative_abundance= Abundance/ total_abundance) |> 
  filter(Relative_abundance != 0) |> 
  summarise(q0 = sum(Relative_abundance^0)^(1/(1-0)),
            q1 = exp(-sum(Relative_abundance * log(Relative_abundance))),
            q2 = sum(Relative_abundance^2)^(1/(1-2)), 
            bird_total_abundance = unique(total_abundance))



rural_plant_hill <- rural_plant_data |> 
  pivot_longer(cols = paardenbloem:garlic_mustard, #change data to long format, select plant columns
               names_to = "Species",
               values_to = "Abundance") |> 
  group_by(observer_id) |> 
  mutate(total_abundance = sum(Abundance, na.rm = TRUE)) |> #calculating total_abundance
  mutate(Relative_abundance= Abundance/ total_abundance) |> 
  filter(Relative_abundance != 0) |> 
  summarise(q0 = sum(Relative_abundance^0)^(1/(1-0)),
            q1 = exp(-sum(Relative_abundance * log(Relative_abundance))),
            q2 = sum(Relative_abundance^2)^(1/(1-2)), 
            plant_total_abundance = unique(total_abundance))




urban_plant_hill <- urban_plant_data |> 
  pivot_longer(cols = paardenbloem:rough_hawks_beard, #change data to long format, select plant columns
               names_to = "Species",
               values_to = "Abundance") |> 
  group_by(observer_id) |> 
  mutate(total_abundance = sum(Abundance, na.rm = TRUE)) |> #calculating total_abundance
  mutate(Relative_abundance= Abundance/ total_abundance) |> 
  filter(Relative_abundance != 0) |> 
  summarise(q0 = sum(Relative_abundance^0)^(1/(1-0)),
            q1 = exp(-sum(Relative_abundance * log(Relative_abundance))),
            q2 = sum(Relative_abundance^2)^(1/(1-2)), 
            plant_total_abundance = unique(total_abundance))


```


## Join Tables
```{r}


rural_data_both <-  left_join(rural_bird_hill, rural_plant_hill, by = "observer_id")

urban_data_both <-  left_join(urban_bird_hill, urban_plant_hill, by = "observer_id")


```



## Exploratory Visualizations

```{r}
#rural plant q2 diversity vs bird abundance
ggplot(data = rural_data_both,
       aes(x = q2.y,
           y = bird_total_abundance)) +
  geom_point()

#urban plant q2 diversity vs bird abundance
ggplot(data = urban_data_both,
       aes(x = q2.y,
           y = bird_total_abundance)) +
  geom_point()

#rural plant q1 diversity vs bird abundance
ggplot(data = rural_data_both,
       aes(x = q1.y,
           y = bird_total_abundance)) +
  geom_point()


#boxplots
ggplot(data = urban_data_both,
       aes(y = bird_total_abundance)) +
  geom_boxplot()

ggplot(data = rural_data_both,
       aes(y = bird_total_abundance)) +
  geom_boxplot()

```


## Check Data Correlation
```{r}

pearson_urban_q2 <- cor.test(urban_data_both$bird_total_abundance, urban_data_both$q2.y, method = "pearson", use = "complete.obs")
pearson_urban_q2

pearson_urban_q1 <- cor.test(urban_data_both$bird_total_abundance, urban_data_both$q1.y, method = "pearson", use = "complete.obs")
pearson_urban_q1

pearson_urban_q0 <- cor.test(urban_data_both$bird_total_abundance, urban_data_both$q0.y, method = "pearson", use = "complete.obs")
pearson_urban_q0



pearson_rural_q2 <- cor.test(rural_data_both$bird_total_abundance, rural_data_both$q2.y, method = "pearson", use = "complete.obs")
pearson_rural_q2

pearson_rural_q1 <- cor.test(rural_data_both$bird_total_abundance, rural_data_both$q1.y, method = "pearson", use = "complete.obs")
pearson_rural_q1

pearson_rural_q0 <- cor.test(rural_data_both$bird_total_abundance, rural_data_both$q0.y, method = "pearson", use = "complete.obs")
pearson_rural_q0

mean(urban_data_both$bird_total_abundance)
mean(rural_data_both$bird_total_abundance)
#t test or looking for +- for means between sites

```


- difference between urban and rural values
- check data normality whenver possible




